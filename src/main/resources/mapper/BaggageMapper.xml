<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.BaggageMapper">


    <sql id="bgFlightDate">
        <if test="granularity==1">year(bg.FlightDate) time</if>
        <if test="granularity==2">DATE_FORMAT(bg.FlightDate,'%Y年%m月') time</if>
        <if test="granularity==3">DATE_FORMAT(bg.FlightDate,'%Y年第%u周') time</if>
        <if test="granularity==4">DATE_FORMAT(bg.FlightDate,'%Y-%m-%d %H点') time</if>
        <if test="granularity==0">DATE_FORMAT(bg.FlightDate,'%Y-%m-%d') time</if>
    </sql>

    <sql id="btOperateTime">
        <if test="granularity==1">year(bt.OperateTime) time</if>
        <if test="granularity==2">DATE_FORMAT(bt.OperateTime,'%Y年%m月') time</if>
        <if test="granularity==3">DATE_FORMAT(bt.OperateTime,'%Y年第%u周') time</if>
        <if test="granularity==4">DATE_FORMAT(bt.OperateTime,'%Y-%m-%d %H点') time</if>
        <if test="granularity==0">DATE_FORMAT(bt.OperateTime,'%Y-%m-%d') time</if>
    </sql>

    <sql id="orpCreateTime">
        <if test="granularity==1">year(orp.CreateTime) time</if>
        <if test="granularity==2">DATE_FORMAT(orp.CreateTime,'%Y年%m月') time</if>
        <if test="granularity==3">DATE_FORMAT(orp.CreateTime,'%Y年第%u周') time</if>
        <if test="granularity==4">DATE_FORMAT(orp.CreateTime,'%Y-%m-%d %H点') time</if>
        <if test="granularity==0">DATE_FORMAT(orp.CreateTime,'%Y-%m-%d') time</if>
    </sql>

    <sql id="bgCreateTime">
        <if test="granularity==1">year(bg.CreateTime) time</if>
        <if test="granularity==2">DATE_FORMAT(bg.CreatedTime,'%Y年%m月') time</if>
        <if test="granularity==3">DATE_FORMAT(bg.CreatedTime,'%Y年第%u周') time</if>
        <if test="granularity==4">DATE_FORMAT(bg.CreatedTime,'%Y-%m-%d %H点') time</if>
        <if test="granularity==0">DATE_FORMAT(bg.CreatedTime,'%Y-%m-%d') time</if>
    </sql>
    <sql id="btCreateTime">
        <if test="granularity==1">year(bt.CreateTime) time</if>
        <if test="granularity==2">DATE_FORMAT(bt.CreatedTime,'%Y年%m月') time</if>
        <if test="granularity==3">DATE_FORMAT(bt.CreatedTime,'%Y年第%u周') time</if>
        <if test="granularity==4">DATE_FORMAT(bt.CreatedTime,'%Y-%m-%d %H点') time</if>
        <if test="granularity==0">DATE_FORMAT(bt.CreatedTime,'%Y-%m-%d') time</if>
    </sql>


    <sql id="terminalType">
        <if test="terminal==0">al.DepartureTerminal type,</if>
        <if test="terminal==1">al.LandingTerminal type,</if>
    </sql>
    <sql id="terminalJoin">
        <if test="terminal==0">
            from baggage bg LEFT JOIN  (selEct COUNT(1),NO,DepartureTerminal from airline al GROUP BY NO,DepartureTerminal) al on bg.FlightNo = al.NO
        </if>
        <if test="terminal==1">
            from baggage bg LEFT JOIN  (selEct COUNT(1),NO,LandingTerminal from airline al GROUP BY NO,LandingTerminal) al on bg.FlightNo = al.NO
        </if>
    </sql>

    <select id="countByAirLine" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">
        <if test="type==0">
            SELECT count(bg.id) count,left(bg.FlightNo,2) type,
            <include refid="bgFlightDate"/>
            from baggage bg
            where bg.FlightDate between #{beginTime} and #{endTime}
            GROUP BY type,time;
        </if>
        <if test="type==1">
            SELECT count(bg.id) count,
            <include refid="terminalType" />
            <include refid="bgFlightDate"/>
            <include refid="terminalJoin" />
            where bg.FlightDate between #{beginTime} and #{endTime}
            GROUP BY type,time;
        </if>
    </select>

    <select id="countByTrace" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">
        SELECT count(bt.BaggageID) as count, btf.NodeName as type,
        <include refid="btOperateTime"/>
        from baggagetrace bt LEFT JOIN baggagetraceconfig btf
        on bt.BaggageTraceConfigID=btf.id
        where bt.OperateTime between #{beginTime} and #{endTime}
        and btf.id IN
        <foreach item="item" index="index" collection="traceList" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY btf.NodeName,time
    </select>


    <select id="countByResource" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">
        <if test="type==0">
            SELECT count(bt.BaggageID) as count, bt.OperatorID as type,
            <include refid="btOperateTime"/>
            from baggagetrace bt LEFT JOIN baggagetraceconfig btf
            on bt.BaggageTraceConfigID=btf.id
            where bt.OperateTime between #{beginTime} and #{endTime}
            GROUP BY bt.OperatorID,time
        </if>
        <if test="type==1">
            SELECT count(bt.BaggageID) as count, r.id as type,
            <include refid="btOperateTime"/>
            from baggagetrace bt LEFT JOIN baggagetraceconfig btf
            on bt.BaggageTraceConfigID=btf.id
            LEFT JOIN resource r
            on r.BaggageTraceConfigID=btf.id
            where bt.OperateTime between #{beginTime} and #{endTime}
            GROUP BY r.id ,time
        </if>
    </select>

    <select id="countByBaggage" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">
        <if test="type==0">
            SELECT count(bg.id) count,bg.SpecialBaggageType type ,
            <include refid="bgFlightDate"/>
            from
            baggage bg
            where bg.FlightDate between #{beginTime} and #{endTime}
            GROUP BY bg.SpecialBaggageType,time
        </if>
        <if test="type==1">
            SELECT count(bg.id) count,bg.AbnormalCode type ,
            <include refid="bgFlightDate"/>
            from
            baggage bg
            where bg.FlightDate between #{beginTime} and #{endTime}
            GROUP BY bg.AbnormalCode,time
        </if>
    </select>

    <select id="drillData" parameterType="com.entity.dto.DrillParam" resultType="com.entity.dto.BaggageLineData">
        select count(bg.ID) as count,bg.FlightNo type,
        <include refid="bgFlightDate"/>
        from baggage bg
        LEFT JOIN  (selEct COUNT(1),NO,DepartureTerminal from airline al GROUP BY NO,DepartureTerminal) al on al.No = bg.FlightNo
        where bg.FlightDate between #{beginTime} and #{endTime}
        <if test="companyCode!=null and companyCode!=''">and al.CompanyCode = #{companyCode}</if>
        <if test="teminal!=null and teminal!=''">
            and al.DepartureTerminal = #{teminal}
            or al.LandingTerminal = #{teminal}
        </if>
        GROUP BY bg.FlightNo,time;
    </select>

    <!--异常行李统计-->

    <select id="countErrByAirLine" resultType="com.entity.dto.BaggageLineData">
        <if test="type==0">
            SELECT count(bg.id) count,left(bg.FlightNo,2) type,
            <include refid="bgFlightDate"/>
            from baggage bg
            where bg.FlightDate between #{beginTime} and #{endTime} and
            (
            bg.AbnormalCode!=''
            and bg.AbnormalCode!=null
            )
            GROUP BY type, time;
        </if>
        <if test="type==1">
            SELECT count(bg.id) count,
            <include refid="terminalType" />
            <include refid="bgFlightDate"/>
            <include refid="terminalJoin" />
            where bg.FlightDate between #{beginTime} and #{endTime} and
            (
            bg.AbnormalCode!=''
            and bg.AbnormalCode!=null
            )
            GROUP BY type,time;
        </if>
    </select>
    <select id="countErrByTrace" resultType="com.entity.dto.BaggageLineData">
        select B.CurrnetPlaceID type,count(*) value,
        <include refid="bgFlightDate"/>
        from baggage bg
        left join baggagetrace B on B.BaggageID=bg.ID
        where
        (bg.AbnormalCode!=''
        and bg.AbnormalCode is not null)
        and bg.FlightDate between #{beginTime} and #{endTime}
        group by B.CurrnetPlaceID,bg.FlightDate
        order by bg.FlightDate;
    </select>
    <!--0:操作员  1:设备-->
    <select id="countErrByResource" resultType="com.entity.dto.BaggageLineData">
        <if test="type==0">
            SELECT count(bt.BaggageID) as count, bt.OperatorID as type,
            <include refid="btOperateTime" />
            from baggagetrace bt LEFT JOIN baggagetraceconfig btf
            on bt.BaggageTraceConfigID=btf.id
            left join baggage bg on bg.id = bt.BaggageID
            where bt.OperateTime between #{beginTime} and #{endTime}
            and (bg.AbnormalCode!=''
            and bg.AbnormalCode!=null)
            GROUP BY bt.OperatorID,time
        </if>
        <if test="type==1">
            SELECT count(bt.BaggageID) as count, r.id as type,
            <include refid="btOperateTime" />
            from baggagetrace bt LEFT JOIN baggagetraceconfig btf
            on bt.BaggageTraceConfigID=btf.id
            LEFT JOIN resource r
            on r.BaggageTraceConfigID=btf.id
            left join baggage bg on bg.id = bt.BaggageID
            where bt.OperateTime between #{beginTime} and #{endTime}
            and (bg.AbnormalCode!=''
            and bg.AbnormalCode!=null)
            GROUP BY r.id ,time
        </if>
    </select>
    <select id="countErrByBaggage" resultType="com.entity.dto.BaggageLineData">
        select bg.SpecialBaggageType type,count(bg.id) value,
        <include refid="bgFlightDate" />
        from baggage bg
        where (bg.AbnormalCode!=''
        and bg.AbnormalCode is not null)
        and bg.FlightDate between #{beginTime} and #{endTime}
        group by bg.SpecialBaggageType,bg.FlightDate
    </select>
    <select id="drillErrData" resultType="com.entity.dto.BaggageLineData">
        select count(bg.ID) as count,bg.FlightNo type,
        <include refid="bgFlightDate" />
        from baggage bg
        LEFT JOIN  (selEct COUNT(1),NO,DepartureTerminal from airline al GROUP BY NO,DepartureTerminal) al on al.No = bg.FlightNo
        where bg.FlightDate between #{beginTime} and #{endTime}
        and (bg.AbnormalCode!=''
        and bg.AbnormalCode is not null)
        <if test="companyCode!=null and companyCode!=''">and al.CompanyCode = #{companyCode}</if>
        <if test="teminal!=null and teminal!=''">
            and al.DepartureTerminal = #{teminal}
            or al.LandingTerminal = #{teminal}
        </if>
        GROUP BY bg.FlightNo,time;
    </select>

    <!--<select id="countEffByAirLine" resultType="com.entity.dto.BaggageLineData">-->
        <!--<if test="type==0">-->
            <!--SELECT count(bg.id) count,left(bg.FlightNo,2) type,-->
            <!--<if test="granularity==1">year(bg.FlightDate) time</if>-->
            <!--<if test="granularity==2">DATE_FORMAT(bg.FlightDate,'%Y年%m月') time</if>-->
            <!--<if test="granularity==3">DATE_FORMAT(bg.FlightDate,'%Y年第%u周') time</if>-->
            <!--<if test="granularity==4">DATE_FORMAT(bg.FlightDate,'%Y-%m-%d %H点') time</if>-->
            <!--<if test="granularity==0">bg.FlightDate time</if>-->
            <!--from baggage bg-->
            <!--where bg.FlightDate between #{beginTime} and #{endTime}-->
            <!--GROUP BY type, time;-->
        <!--</if>-->
        <!--<if test="type==1">-->
            <!--SELECT count(bg.id) count,al.DepartureTerminal type,-->
            <!--<if test="granularity==1">year(bg.FlightDate) time</if>-->
            <!--<if test="granularity==2">DATE_FORMAT(bg.FlightDate,'%Y年%m月') time</if>-->
            <!--<if test="granularity==3">DATE_FORMAT(bg.FlightDate,'%Y年第%u周') time</if>-->
            <!--<if test="granularity==4">DATE_FORMAT(bg.FlightDate,'%Y-%m-%d %H点') time</if>-->
            <!--<if test="granularity==0">bg.FlightDate time</if>-->
            <!--from baggage bg LEFT JOIN  (selEct COUNT(1),NO,DepartureTerminal from airline al GROUP BY NO,DepartureTerminal) al on bg.FlightNo = al.NO-->
            <!--where bg.FlightDate between #{beginTime} and #{endTime}-->
            <!--GROUP BY al.DepartureTerminal,time;-->
        <!--</if>-->
    <!--</select>-->


    <select id="drillEffData" resultType="com.entity.dto.BaggageLineData">

    </select>
    <select id="sumTimeByAirLine" resultType="com.entity.dto.SumTimeDto">
        <if test="type==0">
            SELECT SUM(TIMESTAMPDIFF(Hour,bgt.BeginTime,bgt.EndTime)) sum,left(bg.FlightNo,2) type
            FROM baggagetrace  bgt  LEFT JOIN baggage bg ON bg.Id = bgt.BaggageID
            WHERE bgt.BeginTime BETWEEN  #{beginTime} and #{endTime}
            GROUP BY type
        </if>
        <if test="type==1">
            SELECT SUM(TIMESTAMPDIFF(Hour,bgt.BeginTime,bgt.EndTime)) sum,bgt.OperateTeminal type
            FROM baggagetrace  bgt  LEFT JOIN baggage bg ON bg.Id = bgt.BaggageID
            WHERE bgt.OperateTime BETWEEN #{beginTime} and #{endTime}
            GROUP BY type
        </if>
    </select>
    <select id="sumTimeByTrace" resultType="com.entity.dto.SumTimeDto">
        SELECT SUM(TIMESTAMPDIFF(Hour,bgt.BeginTime,bgt.EndTime)) sum,btf.NodeName type from baggagetrace bgt
        left JOIN  baggagetraceconfig btf
        ON bgt.BaggageTraceConfigID = btf.ID
        GROUP BY type
    </select>
    <!--0:操作员  1:设备-->
    <select id="sumTimeByResource" resultType="com.entity.dto.SumTimeDto">
        <if test="type==0">
            SELECT SUM(TIMESTAMPDIFF(Hour,bgt.BeginTime,bgt.EndTime)) sum,bgt.OperatorID type
            from baggagetrace bgt
            WHERE bgt.BeginTime BETWEEN #{beginTime} and #{endTime}
            GROUP BY type
        </if>
        <if test="type==1">
            SELECT SUM(TIMESTAMPDIFF(Hour,bgt.BeginTime,bgt.EndTime)) sum,re.`No` type
            from baggagetrace bgt LEFT JOIN baggagetraceconfig btf
            on bgt.BaggageTraceConfigID=btf.id
            LEFT JOIN resource re
            on re.BaggageTraceConfigID=btf.id
            WHERE bgt.BeginTime BETWEEN #{beginTime} and #{endTime}
            GROUP BY re.`No`
        </if>
    </select>
    <select id="sumTimeByBaggage" resultType="com.entity.dto.SumTimeDto">
        SELECT SUM(TIMESTAMPDIFF(Hour,bgt.BeginTime,bgt.EndTime)) sum,bg.SpecialBaggageType type
        from baggagetrace bgt LEFT JOIN baggage bg
        on bgt.BaggageID = bg.ID
        WHERE bgt.BeginTime BETWEEN #{beginTime} and #{endTime}
        GROUP BY type
    </select>
    <!--<select id="countExByMsgType" resultType="com.entity.dto.BaggageLineData">-->
        <!--SELECT count(1) count,orqc.MessageSourceID type,-->
        <!--<include refid="orpCreateTime" />-->
        <!--from outerrespone orp-->
        <!--left JOIN outerrequestconfig  orqc on orp.OuterRequestConfigID = orqc.ID-->
        <!--WHERE orp.CreateTime BETWEEN #{beginTime} and #{endTime}-->
        <!--GROUP BY orqc.MessageSourceID,time-->
    <!--</select>-->
    <!--<select id="countExByApi" resultType="com.entity.dto.BaggageLineData">-->
        <!--SELECT count(1) count,orp.OuterRequestConfigID type,-->
        <!--<include refid="orpCreateTime" />-->
        <!--from outerrespone orp-->
        <!--WHERE orp.CreateTime BETWEEN '2017-01-01 00:00:00' and '2022-12-31 00:00:00'-->
        <!--GROUP BY orp.OuterRequestConfigID,time-->
    <!--</select>-->
    <select id="countExByAirLine" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">
        <if test="type==0">
            SELECT count(bg.id) count,left(bg.FlightNo,2) type,
            <include refid="bgCreateTime"/>
            from baggage bg
            where bg.CreatedTime between #{beginTime} and #{endTime}
            GROUP BY type,time;
        </if>
        <if test="type==1">
            SELECT count(bg.id) count,
            <include refid="terminalType" />
            <include refid="bgCreateTime"/>
            <include refid="terminalJoin" />
            where bg.CreatedTime between #{beginTime} and #{endTime}
            GROUP BY type,time;
        </if>
    </select>

    <select id="countExByTrace" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">
        SELECT count(bt.BaggageID) as count, btf.NodeName as type,
        <include refid="btCreateTime"/>
        from baggagetrace bt LEFT JOIN baggagetraceconfig btf
        on bt.BaggageTraceConfigID=btf.id
        where bt.CreatedTime between #{beginTime} and #{endTime}
        and btf.id IN
        <foreach item="item" index="index" collection="traceList" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY btf.NodeName,time
    </select>


    <!--<select id="countByResource" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">-->
        <!--<if test="type==0">-->
            <!--SELECT count(bt.BaggageID) as count, bt.OperatorID as type,-->
            <!--<include refid="btOperateTime"/>-->
            <!--from baggagetrace bt LEFT JOIN baggagetraceconfig btf-->
            <!--on bt.BaggageTraceConfigID=btf.id-->
            <!--where bt.OperateTime between #{beginTime} and #{endTime}-->
            <!--GROUP BY bt.OperatorID,time-->
        <!--</if>-->
        <!--<if test="type==1">-->
            <!--SELECT count(bt.BaggageID) as count, r.id as type,-->
            <!--<include refid="btOperateTime"/>-->
            <!--from baggagetrace bt LEFT JOIN baggagetraceconfig btf-->
            <!--on bt.BaggageTraceConfigID=btf.id-->
            <!--LEFT JOIN resource r-->
            <!--on r.BaggageTraceConfigID=btf.id-->
            <!--where bt.OperateTime between #{beginTime} and #{endTime}-->
            <!--GROUP BY r.id ,time-->
        <!--</if>-->
    <!--</select>-->

    <select id="countExByBaggage" parameterType="com.entity.dto.QueryParam" resultType="com.entity.dto.BaggageLineData">
        <if test="type==0">
            SELECT count(bg.id) count,bg.SpecialBaggageType type ,
            <include refid="bgCreateTime"/>
            from
            baggage bg
            where bg.CreatedTime between #{beginTime} and #{endTime}
            GROUP BY bg.SpecialBaggageType,time
        </if>
        <if test="type==1">
            SELECT count(bg.id) count,bg.AbnormalCode type ,
            <include refid="bgCreateTime"/>
            from
            baggage bg
            where bg.CreatedTime between #{beginTime} and #{endTime}
            GROUP BY bg.AbnormalCode,time
        </if>
    </select>
    <select id="countExBySource" resultType="com.entity.dto.BaggageLineData">
        SELECT count(1) count,orp.SourceFrom type,
        <include refid="orpCreateTime" />
        from outerrespone  orp
        WHERE orp.CreateTime
        BETWEEN  #{beginTime} and #{endTime}
        group by type,time
    </select>


</mapper>